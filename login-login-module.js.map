{"version":3,"sources":["webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Example Pages'\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: LoginComponent,\r\n        data: {\r\n          title: 'Login Page'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {}\r\n","module.exports = \"/* :host {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 100vh;\\r\\n    width: 100vw;    \\r\\n    background-color: #f5f7fa;\\r\\n    background-position: center center;\\r\\n    background-size: cover;\\r\\n} */\\r\\n:host {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 100vh;\\r\\n    width: 100vw;    \\r\\n    background-color: #f5f7fa;\\r\\n    background-image: url('body.jpg');  \\r\\n    background-size: cover;\\r\\n    background-position-x: center;\\r\\n    background-position-y: center;\\r\\n}\\r\\n.sign-in-form {\\r\\n    min-width: 300px;\\r\\n    background-color: white;\\r\\n    opacity: .93;\\r\\n    padding: 20px;\\r\\n}\\r\\na {\\r\\n    line-height: 32px;\\r\\n}\\r\\nbutton {\\r\\n    float: right;\\r\\n}\\r\\n.message {\\r\\n    float: right;\\r\\n}\\r\\n.pv {\\r\\n    font-weight: bold;\\r\\n}\\r\\n.panel .panel-heading {\\r\\n    border-bottom: 0;\\r\\n    font-size: 14px;\\r\\n}\\r\\n.wd-xl {\\r\\n    width: 320px;\\r\\n}\\r\\n.mailFont{\\r\\n        margin-top: 11px;\\r\\n    margin-left: -25px;\\r\\n}\\r\\n.displayInlineFlex{\\r\\n    display:flex;\\r\\n}\\r\\n.panel {\\r\\n    margin-bottom: 21px;\\r\\n    background-color: #fff;\\r\\n    border: 1px solid transparent;\\r\\n    border-radius: 4px;\\r\\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\\r\\n}\\r\\n.panel-heading {\\r\\n    padding: 5px 15px;\\r\\n    border-bottom: 1px solid transparent;\\r\\n    border-top-right-radius: 3px;\\r\\n    border-top-left-radius: 3px;\\r\\n}\\r\\n.panel-body {\\r\\n    padding: 15px;\\r\\n}\\r\\nform {\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    max-width: 400px;\\r\\n    background-color: #FFF;\\r\\n    margin: 0;\\r\\n    padding: 0 1.5em 1.5em;\\r\\n    box-sizing: border-box;\\r\\n    border: solid 1px #DDD;\\r\\n    border-radius: .5em;\\r\\n    font-family: 'Source Sans Pro', sans-serif;\\r\\n  }\\r\\nform .svgContainer {\\r\\n    position: relative;\\r\\n    width: 200px;\\r\\n    height: 200px;\\r\\n    margin: 0 auto 1em;\\r\\n    border-radius: 50%;\\r\\n    background: none;\\r\\n    border: solid 2.5px #3A5E77;\\r\\n    overflow: hidden;\\r\\n    pointer-events: none;\\r\\n  }\\r\\nform .svgContainer div {\\r\\n    position: relative;\\r\\n    width: 100%;\\r\\n    height: 0;\\r\\n    overflow: hidden;\\r\\n    padding-bottom: 100%;\\r\\n  }\\r\\nform .svgContainer .mySVG {\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    pointer-events: none;\\r\\n  }\\r\\nform .inputGroup {\\r\\n    margin: 0 0 1.5em;\\r\\n    padding: 0;\\r\\n    position: relative;\\r\\n  }\\r\\nform .inputGroup:last-of-type {\\r\\n    margin-bottom: 0;\\r\\n  }\\r\\nform label {\\r\\n    margin: 0 0 5px;\\r\\n    display: block;\\r\\n    font-size: 1.25em;\\r\\n    color: #217093;\\r\\n    font-weight: 700;\\r\\n    font-family: inherit;\\r\\n  }\\r\\nform input[type='email'], form input[type=\\\"text\\\"], form input[type='password'] {\\r\\n    display: block;\\r\\n    margin: 0;\\r\\n    padding: 0 1em 0;\\r\\n    background-color: #f3fafd;\\r\\n    border: solid 2px #217093;\\r\\n    border-radius: 4px;\\r\\n    -webkit-appearance: none;\\r\\n    box-sizing: border-box;\\r\\n    width: 100%;\\r\\n    height: 55px;\\r\\n    font-size: 1.5em;\\r\\n    color: #353538;\\r\\n    font-weight: 600;\\r\\n    font-family: inherit;\\r\\n    transition: box-shadow .2s linear, border-color .25s ease-out;\\r\\n  }\\r\\nform input[type='email']:focus, form input[type=\\\"text\\\"]:focus, form input[type='password']:focus {\\r\\n    outline: none;\\r\\n    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\\r\\n    border: solid 2px #4eb8dd;\\r\\n  }\\r\\n/* form input[type='email'], form input[type=\\\"text\\\"] {\\r\\n    padding: 14px 1em 0px;\\r\\n  } */\\r\\nform button {\\r\\n    display: block;\\r\\n    margin: 0;\\r\\n    padding: .65em 1em 1em;\\r\\n    background-color: #4eb8dd;\\r\\n    border: none;\\r\\n    border-radius: 4px;\\r\\n    box-sizing: border-box;\\r\\n    box-shadow: none;\\r\\n    width: 100%;\\r\\n    height: 55px;\\r\\n    font-size: 1.5em;\\r\\n    color: #FFF;\\r\\n    font-weight: 600;\\r\\n    font-family: inherit;\\r\\n    transition: background-color .2s ease-out;\\r\\n  }\\r\\nform button:hover, form button:active {\\r\\n    background-color: #217093;\\r\\n  }\\r\\nform .inputGroup1 .helper {\\r\\n    position: absolute;\\r\\n    z-index: 1;\\r\\n    font-family: inherit;\\r\\n  }\\r\\nform .inputGroup1 .helper1 {\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    -webkit-transform: translate(1.4em, 2.6em) scale(1);\\r\\n            transform: translate(1.4em, 2.6em) scale(1);\\r\\n    -webkit-transform-origin: 0 0;\\r\\n            transform-origin: 0 0;\\r\\n    color: #217093;\\r\\n    font-size: 1.25em;\\r\\n    font-weight: 400;\\r\\n    opacity: .65;\\r\\n    pointer-events: none;\\r\\n    transition: opacity .2s linear, -webkit-transform .2s ease-out;\\r\\n    transition: transform .2s ease-out, opacity .2s linear;\\r\\n    transition: transform .2s ease-out, opacity .2s linear, -webkit-transform .2s ease-out;\\r\\n  }\\r\\nform .inputGroup1.focusWithText .helper {\\r\\n    /*input[type='email']:focus + .helper {*/\\r\\n    -webkit-transform: translate(1.4em, 2em) scale(0.65);\\r\\n            transform: translate(1.4em, 2em) scale(0.65);\\r\\n    opacity: 1;\\r\\n  }\\r\\n.height100per {\\r\\n    height: 100%;\\r\\n  }\\r\\n  \"","module.exports = \"<!-- START panel-->\\r\\n<div class=\\\"panel panel-dark panel-flat\\\">\\r\\n    <div class=\\\"panel-heading text-center\\\">\\r\\n        <a href=\\\"#\\\">\\r\\n            <!-- <img class=\\\"block-center img-rounded\\\" height=\\\"40\\\" [src]=\\\"companyLogoImagePath\\\" alt=\\\"Image\\\" onError=\\\"this.src='/assets/img/noimage.PNG';\\\"> -->\\r\\n        </a>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\" style=\\\"min-height: 220px\\\">\\r\\n        <p class=\\\"text-center pv\\\"></p>\\r\\n        <form #signInForm=\\\"ngForm\\\" class=\\\"form-validate mb-lg\\\" role=\\\"form\\\" (ngSubmit)=\\\"onSubmit(signInForm)\\\" name=\\\"login.loginForm\\\"\\r\\n            novalidate=\\\"\\\">\\r\\n            <div style=\\\"text-align: center;\\\">\\r\\n                <img src=\\\"assets/img/autodap_logo.png\\\" width=\\\"150px\\\" style=\\\"padding: 2.5% 0 0;\\\" />\\r\\n            </div>\\r\\n            <!-- <div class=\\\"form-group has-feedback displayInlineFlex\\\">\\r\\n                    <input class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" [ngModelOptions]=\\\"{standalone: true}\\\" name=\\\"username\\\"\\r\\n                        placeholder=\\\"Username\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"username\\\" type=\\\"email\\\" required>\\r\\n                    <span class=\\\"fa fa-envelope form-control-feedback text-muted mailFont\\\"></span> -->\\r\\n            <!-- <span [hidden]=\\\"exampleInputEmail1.valid || exampleInputEmail1.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n          User Name is required\\r\\n        </span> -->\\r\\n            <!--<span class=\\\"text-danger ng-hide\\\" ng-show=\\\"login.loginForm.account_email.$dirty &amp;&amp; login.loginForm.account_email.$error.required\\\">This field is required</span>\\r\\n                 <span class=\\\"text-danger ng-hide\\\" ng-show=\\\"login.loginForm.account_email.$dirty &amp;&amp; login.loginForm.account_email.$error.email\\\">This field must be a valid email address</span>-->\\r\\n            <!-- </div>\\r\\n                <div class=\\\"form-group has-feedback displayInlineFlex\\\">\\r\\n                    <input class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" name=\\\"password\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                        type=\\\"Password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" required>\\r\\n                    <span class=\\\"fa fa-lock form-control-feedback text-muted mailFont\\\"></span> -->\\r\\n            <!--<span class=\\\"text-danger ng-hide\\\" ng-show=\\\"login.loginForm.account_password.$dirty &amp;&amp; login.loginForm.account_password.$error.required\\\">This field is required</span>-->\\r\\n            <!-- </div> -->\\r\\n            <!-- <div class=\\\"clearfix\\\">\\r\\n                 <div class=\\\"checkbox c-checkbox pull-left mt0\\\">\\r\\n                    <label>\\r\\n                       <input value=\\\"\\\" name=\\\"rememberMe\\\" ngModel class=\\\"ng-pristine ng-untouched ng-valid ng-empty\\\" type=\\\"checkbox\\\">\\r\\n                       Remember Me</label>\\r\\n                 </div>\\r\\n                 <div class=\\\"pull-right\\\"><a class=\\\"text-muted\\\" ui-sref=\\\"page.recover\\\" href=\\\"#!/page/recover\\\">Forgot your password?</a>\\r\\n                 </div>\\r\\n              </div> -->\\r\\n            <!--<div class=\\\"alert alert-danger text-center ng-binding ng-hide\\\" ng-show=\\\"login.authMsg\\\"></div>-->\\r\\n            <!-- <p class=\\\"pt-lg text-center\\\">Need to Signup?</p> -->\\r\\n            <!-- <a class=\\\"btn btn-block btn-default\\\" ui-sref=\\\"page.register\\\" href=\\\"#!/page/register\\\">Register Now</a> -->\\r\\n\\r\\n            <!-- </div> -->\\r\\n            <div class=\\\"inputGroup inputGroup1\\\">\\r\\n                <label for=\\\"email1\\\">Email</label>\\r\\n                <input type=\\\"text\\\" id=\\\"exampleInputEmail1\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\" class=\\\"email\\\"\\r\\n                    maxlength=\\\"256\\\" required />\\r\\n            </div>\\r\\n            <div class=\\\"inputGroup inputGroup2\\\">\\r\\n                <label for=\\\"password\\\">Password</label>\\r\\n                <input type=\\\"password\\\" id=\\\"exampleInputPassword1\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" class=\\\"password\\\"\\r\\n                    required />\\r\\n            </div>\\r\\n            <div *ngIf=\\\"formError\\\" class=\\\"alert alert-danger\\\">\\r\\n                {{ formError }}\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!submitting\\\" style=\\\"margin-bottom: 30px\\\" class=\\\"inputGroup inputGroup3\\\">\\r\\n                <!--<a routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\">Register</a>-->\\r\\n                <button id=\\\"login\\\" type=\\\"submit\\\">Log in</button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"submitting\\\">\\r\\n                <p class=\\\"message\\\" style=\\\"text-align: center\\\">Signing in....</p>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"showError != ''\\\" class=\\\"alert alert-danger\\\" style=\\\"margin-top: 65px;margin-bottom: 0px;\\\">\\r\\n                <strong>{{showError}}</strong>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n    </div>\\r\\n    <!-- END panel-->\\r\\n    <!--<div class=\\\"p-lg text-center\\\">\\r\\n        <span>©</span>\\r\\n        <span ng-bind=\\\"app.year\\\" class=\\\"ng-binding\\\">2017</span>\\r\\n        <span>-</span>\\r\\n        <span ng-bind=\\\"app.name\\\" class=\\\"ng-binding\\\">Angle</span>\\r\\n        <br>\\r\\n        <span ng-bind=\\\"app.description\\\" class=\\\"ng-binding\\\">Angular Bootstrap Admin Template</span>\\r\\n     </div>-->\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n// import { Md5 } from 'ts-md5/dist/md5';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n// import { TranslationService } from '../services/translation.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { LocalStorage, SessionStorage, LocalStorageService } from 'ngx-webstorage';\r\n// import { SessionService } from '../services/sessionService';\r\n\r\n@Component({\r\n    templateUrl: 'login.component.html',\r\n    styleUrls: ['login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    formError: string;\r\n    submitting = false;\r\n    companyLogoImagePath: string;\r\n    username: string = \"\";\r\n    password: string = \"\";\r\n    showError = \"\";\r\n    lables: any;\r\n\r\n    constructor(public router: Router, public userService: UserService, public storage: LocalStorageService) {\r\n        // this.companyLogoImagePath = './assets/img/gs_logo_badge.png';\r\n        // this.companyLogoImagePath = './assets/title-bar/companyLogo1.png'\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    onSubmit(signInForm: NgForm) {\r\n        if (signInForm.valid) {\r\n            this.formError = \"\";\r\n            this.submitting = true;\r\n            //   var md5 = new Md5();\r\n            //   var password = '' + md5.appendStr(this.password).end();\r\n            this.userService.signIn(this.username, btoa(this.password))\r\n                .subscribe((data) => {\r\n                    this.storage.store(\"APIkey\",data.data.Apikey);\r\n                    this.storage.store(\"userLogedIn\", \"Yes\")\r\n                    this.storage.store(\"emailId\", this.username)\r\n                    this.router.navigate(['/dashboard']);\r\n                    if (typeof data === \"string\") {\r\n                        this.showError = data;\r\n                        this.submitting = false;\r\n                    }\r\n                    var code = this.userService.observeLanguageSession();\r\n                    //   this.translationService.translate(code)\r\n                    //     .subscribe(\r\n                    //       data => {\r\n                    //         //this.lables = data;\r\n                    //         this.sessionService.setSession(\"selectedLanguage\", data);\r\n                    //       },\r\n                    //       err => console.log('get error: ', err)\r\n                    //     );\r\n                },\r\n                    (err) => {\r\n                        this.submitting = false;\r\n                        this.formError = 'You are not authorized.';\r\n                    }\r\n                );\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';  \r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { LoginComponent } from './login.component';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\n\r\n@NgModule({\r\n  imports: [ LoginRoutingModule ,CommonModule,FormsModule],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"sourceRoot":""}