{"version":3,"sources":["webpack:///./src/app/layout/user-management/user-management-routing.module.ts","webpack:///./src/app/layout/user-management/user-management.component.html","webpack:///./src/app/layout/user-management/user-management.component.scss","webpack:///./src/app/layout/user-management/user-management.component.ts","webpack:///./src/app/layout/user-management/user-management.module.ts"],"names":[],"mappings":"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","file":"user-management-user-management-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserManagementComponent } from './user-management.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: UserManagementComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UserManagementRoutingModule { }\r\n","module.exports = \"<div class=\\\"overflowHidden\\\">\\r\\n    <div class=\\\"row padding10px\\\">\\r\\n        <div class=\\\"col-lg-10 marginTop5px\\\">\\r\\n            <input class=\\\"form-control floatLeft col-lg-10 width85\\\" [(ngModel)]=\\\"searchValue\\\" (ngModelChange)=\\\"searchUser()\\\">\\r\\n            <span class=\\\"fa fa-search faSearch\\\" (click)=\\\"searchUser()\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-1\\\"></div>\\r\\n        <div class=\\\"col-lg-1 marginTop5px\\\">\\r\\n            <a class=\\\"mb-sm btn floatRight backGroundDarkGreen\\\" [routerLink]=\\\"['/signup']\\\">\\r\\n                <a class=\\\"marginRight10px\\\"></a>Add User</a>\\r\\n        </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <form novalidate #myForm=\\\"ngForm\\\" class=\\\"padding10px\\\">\\r\\n        <kendo-grid [data]=\\\"view\\\" [pageSize]=\\\"gridState.take\\\" [skip]=\\\"gridState.skip\\\" [sort]=\\\"gridState.sort\\\"\\r\\n            [pageable]=\\\"true\\\" [sortable]=\\\"true\\\" (dataStateChange)=\\\"onStateChange($event)\\\" (edit)=\\\"editHandler($event)\\\"\\r\\n            (cancel)=\\\"cancelHandler($event)\\\" (save)=\\\"saveHandler($event)\\\">\\r\\n            <kendo-grid-messages pagerOf=\\\"of\\\" pagerItems=\\\"items\\\"></kendo-grid-messages>\\r\\n            <kendo-grid-column field=\\\"FirstName\\\" title=\\\"FirstName\\\" width=\\\"140\\\">\\r\\n                <ng-template kendoGridEditTemplate let-dataItem=\\\"dataItem\\\">\\r\\n                    <input [(ngModel)]=\\\"dataItem.FirstName\\\" kendoGridFocusable max='50' name=\\\"FirstName\\\" class=\\\"k-textbox\\\"\\r\\n                        required />\\r\\n                </ng-template>\\r\\n            </kendo-grid-column>\\r\\n            <kendo-grid-column field=\\\"LastName\\\" title=\\\"LastName\\\" width=\\\"140\\\">\\r\\n                <ng-template kendoGridEditTemplate let-dataItem=\\\"dataItem\\\">\\r\\n                    <input [(ngModel)]=\\\"dataItem.LastName\\\" kendoGridFocusable max='50' name=\\\"LastName\\\" class=\\\"k-textbox\\\" />\\r\\n                </ng-template>\\r\\n            </kendo-grid-column>\\r\\n            <kendo-grid-column field=\\\"Email\\\" title=\\\"EmailAddress\\\" width=\\\"260\\\">\\r\\n            </kendo-grid-column>\\r\\n            <kendo-grid-column field=\\\"Company\\\" title=\\\"Company\\\" width=\\\"120\\\" [style]=\\\"{'text-align': 'center'}\\\">\\r\\n                <ng-template kendoGridEditTemplate let-dataItem=\\\"dataItem\\\">\\r\\n                    <input [(ngModel)]=\\\"dataItem.Company\\\" kendoGridFocusable name=\\\"Company\\\" max='50' class=\\\"k-textbox\\\" />\\r\\n                </ng-template>\\r\\n            </kendo-grid-column>\\r\\n            <kendo-grid-column field=\\\"APICount\\\" title=\\\"Count\\\" width=\\\"100\\\" [style]=\\\"{'text-align': 'center'}\\\">\\r\\n                <ng-template kendoGridEditTemplate let-dataItem=\\\"dataItem\\\">\\r\\n                    <input [(ngModel)]=\\\"dataItem.APICount\\\" (keyup)=\\\"dataItem.APICount&lt;0 ? dataItem.APICount = 0: dataItem.APICount\\\"\\r\\n                        type=\\\"number\\\" min=\\\"0\\\" kendoGridFocusable name=\\\"APICount\\\" class=\\\"k-textbox\\\" />\\r\\n                </ng-template>\\r\\n            </kendo-grid-column>\\r\\n            <kendo-grid-column field=\\\"Active\\\" editor=\\\"boolean\\\" title=\\\"IsActive\\\" width=\\\"100\\\" [style]=\\\"{'text-align': 'center'}\\\">\\r\\n                <ng-template kendoGridCellTemplate let-dataItem>\\r\\n                    <input kendoGridFocusable name=\\\"Active\\\" type=\\\"checkbox\\\" disabled *ngIf='dataItem.Active' checked />\\r\\n                    <input kendoGridFocusable name=\\\"Active\\\" type=\\\"checkbox\\\" disabled *ngIf='!dataItem.Active' />\\r\\n                </ng-template>\\r\\n                <ng-template kendoGridEditTemplate let-dataItem=\\\"dataItem\\\">\\r\\n                    <input [(ngModel)]=\\\"dataItem.Active\\\" kendoGridFocusable name=\\\"Active\\\" type=\\\"checkbox\\\" />\\r\\n                </ng-template>\\r\\n            </kendo-grid-column>\\r\\n            <kendo-grid-command-column title=\\\" Action\\\" width=\\\"120\\\">\\r\\n                <ng-template kendoGridCellTemplate let-dataItem>\\r\\n                    <div class=\\\"textAlignCenter\\\">\\r\\n                        <i class=\\\"fa fa-pencil borderNone colorOrange\\\" kendoGridEditCommand aria-hidden=\\\"true\\\" (click)='dataItem.hideInfo = true'></i>\\r\\n                        <i class=\\\"fa fa-info k-button borderNone colorInfo\\\" aria-hidden=\\\"true\\\" (click)=\\\"featureAccess(dataItem)\\\"></i>\\r\\n                        <i class=\\\"fa fa-lock k-button borderNone colorLock\\\" *ngIf='!dataItem.hideInfo' aria-hidden=\\\"true\\\"\\r\\n                            (click)=\\\"resetPassword(changepwd,dataItem)\\\"></i>\\r\\n                        <i class=\\\"fa fa-check borderNone colorSuccess\\\" kendoGridSaveCommand aria-hidden=\\\"true\\\" (click)='dataItem.hideInfo = false'\\r\\n                            [disabled]=\\\"myForm.invalid\\\"></i>\\r\\n                        <i class=\\\"fa fa-times borderNone colorDanger\\\" kendoGridCancelCommand aria-hidden=\\\"true\\\" (click)='dataItem.hideInfo = false'></i>\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </kendo-grid-command-column>\\r\\n        </kendo-grid>\\r\\n    </form>\\r\\n    <ng-template #apiPermission let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">\\r\\n                APIManagement\\r\\n            </h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <kendo-grid [data]=\\\"APIResult\\\">\\r\\n                <kendo-grid-messages pagerOf=\\\"{{ labels['KendoGrid.Footer.Of']}}\\\" pagerItems=\\\"{{ labels['KendoGrid.Footer.items'] }}\\\"></kendo-grid-messages>\\r\\n                <kendo-grid-column field=\\\"\\\" width=\\\"35\\\" [filterable]=\\\"false\\\">\\r\\n                    <ng-template kendoGridHeaderTemplate let-dataItem>\\r\\n                        <div class=\\\"textAlignCenter\\\">\\r\\n                            <input type=\\\"checkbox\\\" name=\\\"checkAll\\\" id=\\\"checkAll\\\" [(ngModel)]=\\\"checkAll\\\" (change)=\\\"selectAll($event)\\\" />\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                    <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\\\"rowIndex\\\">\\r\\n                        <div class=\\\"textAlignCenter\\\">\\r\\n                            <input #theCheckbox [(ngModel)]=\\\"dataItem.isSelect\\\" type=\\\"checkbox\\\" (ngModelChange)='changeList($event)'>\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </kendo-grid-column>\\r\\n                <kendo-grid-column field=\\\"APIName\\\" title=\\\"{{ labels['UserManagement.APIName'] }}\\\" width=\\\"100\\\">\\r\\n                </kendo-grid-column>\\r\\n            </kendo-grid>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success mb-sm\\\" (click)=\\\"save()\\\">{{ labels['UserManagement.Save'] }}</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger mb-sm\\\" id=\\\"closePopup\\\" (click)=\\\"d('Cross click')\\\">{{\\r\\n                labels['UserManagement.Close'] }}</button>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\\r\\n    <!-- Change Password -->\\r\\n    <ng-template #changepwd let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n            <h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">\\r\\n                Change Password\\r\\n            </h4>\\r\\n            <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n            <div *ngIf=\\\"errorMessage\\\" style=\\\"color:red; text-align:left\\\">\\r\\n                <small>{{errorMessage}}</small>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"message\\\" style=\\\"color:green; text-align:left\\\">\\r\\n                <small>{{message}}</small>\\r\\n            </div>\\r\\n            <form #passwordResetForm=\\\"ngForm\\\" role=\\\"form\\\">\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"New Password\\\" name=\\\"newPass\\\" #newPass=\\\"ngModel\\\"\\r\\n                    required [(ngModel)]=\\\"enterPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <div *ngIf=\\\"newPass.invalid && (newPass.dirty || newPass.touched)\\\" style=\\\"color:red; text-align:left\\\">\\r\\n                    <div *ngIf=\\\"newPass.errors.required\\\">\\r\\n                        <small>NewPassword Is Required</small>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <br />\\r\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm Password\\\" name=\\\"cnfPass\\\" #cnfPass=\\\"ngModel\\\"\\r\\n                    required [(ngModel)]=\\\"reenterPassword\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                <div *ngIf=\\\"cnfPass.invalid && (cnfPass.dirty || cnfPass.touched)\\\" style=\\\"color:red; text-align:left\\\">\\r\\n                    <div *ngIf=\\\"cnfPass.errors.required\\\">\\r\\n                        <small>Confirm Password Is Required</small>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"reenterPassword != enterPassword && (cnfPass.dirty || cnfPass.touched)\\\" style=\\\"color:red; text-align:left\\\">\\r\\n                    <small>Confirm Password Not Matched With NewPassword</small>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success mb-sm\\\" [disabled]=\\\"newPass.invalid || cnfPass.invalid || (reenterPassword != enterPassword)\\\"\\r\\n                (click)=\\\"confirmPwdSave()\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger mb-sm\\\" id='closePopup' (click)=\\\"d('Cross click')\\\">Close</button>\\r\\n        </div>\\r\\n    </ng-template>\\r\\n\\r\\n</div>\"","module.exports = \".width500px {\\n  width: 500px; }\\n\\n.floatLeft {\\n  float: left;\\n  border-radius: 4px 0px 0px 4px; }\\n\\n.floatRight {\\n  float: right; }\\n\\n.backGroundDarkGreen {\\n  color: white !important;\\n  background: #398cb5; }\\n\\n.faSearch {\\n  font-size: 18px;\\n  cursor: pointer;\\n  background: #ccc;\\n  color: black;\\n  padding: 0.64rem 0.75rem;\\n  border-radius: 0px 4px 4px 0px; }\\n\\n.btn-success {\\n  background-color: #12afe3 !important;\\n  border-color: #12afe3 !important; }\\n\\n.btn-danger {\\n  background-color: #ff0000bf !important;\\n  border-color: #ff0000bf !important; }\\n\\n.textAlignCenter {\\n  text-align: center; }\\n\\n.buttonWidth {\\n  width: 25px; }\\n\\n.btn-info {\\n  background-color: #595f65 !important;\\n  border-color: #595f65 !important; }\\n\\n.borderNone {\\n  background: inherit;\\n  border: none; }\\n\\n.colorOrange {\\n  color: darkorange; }\\n\\n.colorInfo {\\n  color: #0275d8; }\\n\\n.colorSuccess {\\n  color: green; }\\n\\n.colorDanger {\\n  color: red; }\\n\\n.colorLock {\\n  color: #398cb5; }\\n\\n@media (min-width: 476px) {\\n  .col-lg-10 {\\n    width: 80%; }\\n  .col-lg-1 {\\n    width: 10%; } }\\n\\n@media (max-width: 476px) {\\n  .col-lg-10 {\\n    width: 100%; }\\n  .width85 {\\n    width: 85%; }\\n  .backGroundDarkGreen {\\n    width: 100%; }\\n  .faSearch {\\n    width: 15%;\\n    text-align: center; } }\\n\\n.marginTop5px {\\n  margin-top: 5px; }\\n\\n.footerMain {\\n  margin: 0px;\\n  bottom: -1px;\\n  position: fixed;\\n  width: 100%;\\n  z-index: 1500; }\\n\\n.padding10px {\\n  padding: 10px; }\\n\\n.overflowHidden {\\n  overflow-x: hidden; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { environment } from '../../../environments/environment';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n// import { TranslateService } from '@ngx-translate/core';\r\n//import { map } from 'rxjs/operators/map';\r\n//grid related demo methods\r\nimport { GridDataResult, PageChangeEvent } from '@progress/kendo-angular-grid';\r\nimport { SortDescriptor, orderBy, GroupDescriptor, process, State } from '@progress/kendo-data-query';\r\nimport { UserProfileService } from '../../services/userProfileService/user-profile.service';\r\nimport { DialogComponent, DialogService } from '../../lib/ng2-bootstrap-modal';\r\nimport { GeneralPopupComponent } from '../../shared/popupgeneral/popup.component';\r\n// import { LanguageManagementService } from '../../shared/services/languageManagementService/languageManagement.service';\r\n//grid related demo methods\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.scss'],\r\n  animations: [],\r\n  providers: [],\r\n})\r\n\r\nexport class UserManagementComponent implements OnInit {\r\n  public view: GridDataResult;\r\n  public APIResult: GridDataResult;\r\n  searchValue = '';\r\n  intermediate = false;\r\n  public gridState: State = {\r\n    sort: [],\r\n    skip: 0,\r\n    take: 10\r\n  };\r\n  public apiGridState: State = {\r\n    sort: [],\r\n    skip: 0,\r\n    take: 40\r\n  };\r\n  footerPass = true;\r\n  userData: any;\r\n  confirmPass: any;\r\n  checkAll: any;\r\n  superAdmin = environment.SuperAdmin;\r\n  currentDataItem: any;\r\n  private data: Object[];\r\n  public formGroup: FormGroup;\r\n  private editedRowIndex: number;\r\n  private editedProduct: any;\r\n  apiList: any;\r\n  reenterPassword: any;\r\n  enterPassword: any;\r\n  message: any;\r\n  errorMessage: any;\r\n  labels: any;\r\n  code: any;\r\n  constructor(private UserProfileService: UserProfileService, private modalService: NgbModal,\r\n    private LocalStorageService: LocalStorageService, public router: Router, private titleService: Title, public dialogService: DialogService) {\r\n    this.labels = this.LocalStorageService.retrieve(\"SelectedLanguage\");\r\n    if (!this.labels) {\r\n      this.code = this.LocalStorageService.retrieve(\"CurrentLanguage\");\r\n      if (this.code) {\r\n        this.code = 'en';\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.titleService.setTitle('User Management');\r\n    this.userData = this.LocalStorageService.retrieve('userData');\r\n    if (this.userData) {\r\n      if (this.userData.Role != this.superAdmin) {\r\n        this.router.navigate(['/userManagement']);\r\n      } else {\r\n        this.UserProfileService.getUserList().then(\r\n          success => {\r\n            if (success.status === 200) {\r\n              this.data = success.data;\r\n              this.loadItems();\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n  searchUser() {\r\n    this.gridState.skip = 0;\r\n    this.gridState.filter = {\r\n      logic: 'or',\r\n      filters: [\r\n        { field: 'FirstName', operator: 'contains', value: this.searchValue },\r\n        { field: 'LastName', operator: 'contains', value: this.searchValue },\r\n        { field: 'Email', operator: 'contains', value: this.searchValue }\r\n      ]\r\n    };\r\n\r\n    this.loadItems();\r\n  }\r\n  public onStateChange(state: State) {\r\n    this.gridState = state;\r\n\r\n    this.loadItems();\r\n  }\r\n  private loadItems(): void {\r\n    this.view = process(this.data, this.gridState);\r\n  }\r\n\r\n  public editHandler({ sender, rowIndex, dataItem }) {\r\n    this.closeEditor(sender);\r\n\r\n    this.editedRowIndex = rowIndex;\r\n    this.editedProduct = Object.assign({}, dataItem);\r\n\r\n    sender.editRow(rowIndex);\r\n  }\r\n\r\n  public cancelHandler({ sender, rowIndex }) {\r\n    this.closeEditor(sender, rowIndex);\r\n  }\r\n\r\n  public saveHandler({ sender, rowIndex, dataItem, isNew }) {\r\n    this.UserProfileService.updateUser(dataItem).then(\r\n      success => {\r\n        if (success.status === 200) {\r\n          this.data = success.data;\r\n          this.UserProfileService.getUserList().then(\r\n            success => {\r\n              if (success.status === 200) {\r\n                this.data = success.data;\r\n                this.loadItems();\r\n              }\r\n            });\r\n        }\r\n      });\r\n    sender.closeRow(rowIndex);\r\n\r\n    this.editedRowIndex = undefined;\r\n    this.editedProduct = undefined;\r\n  }\r\n\r\n  private closeEditor(grid, rowIndex = this.editedRowIndex) {\r\n    grid.closeRow(rowIndex);\r\n    this.resetItem(this.editedProduct);\r\n    this.editedRowIndex = undefined;\r\n    this.editedProduct = undefined;\r\n  }\r\n  public resetItem(dataItem: any) {\r\n    if (!dataItem) { return; }\r\n    for (var i in this.data) {\r\n      var obj = this.data[i];\r\n      if (obj[\"Id\"] == dataItem.Id) {\r\n        this.data[i] = dataItem;\r\n      }\r\n    }\r\n    this.loadItems();\r\n  }\r\n  open(modal, dataItem) {\r\n    this.checkAll = false;\r\n    var count = 0;\r\n    this.currentDataItem = dataItem;\r\n    for (var api in this.apiList) {\r\n      this.apiList[api].isSelect = false;\r\n      this.apiList[api].hideInfo = false;\r\n      for (var api_modified in this.currentDataItem.APIAllowedModified) {\r\n        if (this.apiList[api].Id == this.currentDataItem.APIAllowedModified[api_modified].APIId) {\r\n          this.apiList[api].isSelect = true;\r\n          count = count + 1;\r\n        }\r\n      }\r\n    }\r\n    if (count == this.apiList.length) {\r\n      this.checkAll = true;\r\n      this.intermediate = false;\r\n    } else if (count > 0) {\r\n      this.intermediate = true;\r\n    } else {\r\n      this.intermediate = false;\r\n    }\r\n    this.APIResult = process(this.apiList, this.apiGridState);\r\n    this.modalService.open(modal).result.then((result) => {\r\n    }, (reason) => { });\r\n  }\r\n  ///Reset Password////\r\n  resetPassword(modal, dataItem) {\r\n\r\n    this.footerPass = false;\r\n    this.currentDataItem = dataItem;\r\n    this.reenterPassword = '';\r\n    this.enterPassword = '';\r\n    this.message = '';\r\n    this.errorMessage = '';\r\n    this.modalService.open(modal).result.then((result) => {\r\n    }, (reason) => { });\r\n  }\r\n  confirmPwdSave() {\r\n    var params = {\r\n      Id: this.currentDataItem.Id,\r\n      NewPassword: btoa(this.enterPassword)\r\n    };\r\n    this.message = null;\r\n    this.errorMessage = null;\r\n    this.UserProfileService.updatePassword(params).then(\r\n      success => {\r\n        if (success.status === 200) {\r\n          this.message = success.message;\r\n          document.getElementById('closePopup').click();\r\n        } else {\r\n          this.errorMessage = success.message;\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error)\r\n      });\r\n  }\r\n  ///Reset Password////\r\n  selectAll() {\r\n    this.intermediate = false;\r\n    if (this.checkAll) {\r\n      for (var api in this.apiList) {\r\n        this.apiList[api].isSelect = true;\r\n      }\r\n    } else {\r\n      for (var api in this.apiList) {\r\n        this.apiList[api].isSelect = false;\r\n      }\r\n    }\r\n  }\r\n  changeList(value) {\r\n    var count = 0;\r\n    for (var api in this.apiList) {\r\n      if (this.apiList[api].isSelect) {\r\n        count = count + 1;\r\n      }\r\n    }\r\n    this.checkAll = false;\r\n    if (count == this.apiList.length) {\r\n      this.checkAll = true;\r\n      this.intermediate = false;\r\n    } else if (count > 0) {\r\n      this.intermediate = true;\r\n    } else {\r\n      this.intermediate = false;\r\n    }\r\n  }\r\n  save() {\r\n    var apiListToEdit = [];\r\n    for (var api in this.apiList) {\r\n      if (this.apiList[api].isSelect) {\r\n        apiListToEdit.push(this.apiList[api]);\r\n      }\r\n    }\r\n    this.currentDataItem.APIAllowedModified = apiListToEdit;\r\n    this.UserProfileService.editAPIList(this.currentDataItem).then(\r\n      success => {\r\n        this.UserProfileService.getUserList().then(\r\n          success => {\r\n            if (success.status === 200) {\r\n              this.data = success.data;\r\n              this.loadItems();\r\n              document.getElementById('closePopup').click();\r\n            }\r\n          });\r\n      })\r\n  }\r\n  featureAccess(data) {\r\n    this.UserProfileService.fetchFeatures(data.Id).then(\r\n      success => {\r\n        var data = success.data;\r\n        let dataItem = {\r\n          description: 'AccessFeature',\r\n          title: 'Granted Features',\r\n          data: data\r\n        }\r\n        this.dialogService.addDialog(GeneralPopupComponent, {\r\n          popUpObject: dataItem\r\n        }).subscribe(\r\n          data => {\r\n            if (data) {\r\n              this.UserProfileService.updateUserFeature(data).then(\r\n                success => {\r\n                  alert(success.data)\r\n                })\r\n            }\r\n          })\r\n      })\r\n  }\r\n  ngAfterViewChecked() {\r\n    if (this.intermediate) {\r\n      var checkbox = document.getElementById('checkAll');\r\n      if (checkbox) {\r\n        checkbox['indeterminate'] = true;\r\n      }\r\n    } else {\r\n      var checkbox = document.getElementById('checkAll');\r\n      if (checkbox) {\r\n        checkbox['indeterminate'] = false;\r\n      }\r\n    }\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpModule } from '@angular/http';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\n\r\n\r\n// import { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { UserManagementRoutingModule } from './user-management-routing.module';\r\nimport { UserManagementComponent } from './user-management.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    UserManagementRoutingModule,\r\n    FormsModule,\r\n    GridModule\r\n  ],\r\n  declarations: [UserManagementComponent]\r\n})\r\nexport class UserManagementModule { }\r\n"],"sourceRoot":""}