{"version":3,"sources":["webpack:///./src/app/layout/signup/signup-routing.module.ts","webpack:///./src/app/layout/signup/signup.component.html","webpack:///./src/app/layout/signup/signup.component.scss","webpack:///./src/app/layout/signup/signup.component.ts","webpack:///./src/app/layout/signup/signup.module.ts"],"names":[],"mappings":"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","file":"signup-signup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './signup.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: SignupComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class SignupRoutingModule { }\r\n","module.exports = \"<div class=\\\"login-page\\\" style=\\\"padding: 0!important; overflow-x: hidden\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"loginBox SignupBox\\\">\\r\\n            <div style=\\\"background-color:#f7f7f7;\\\">\\r\\n                <form #registerForm=\\\"ngForm\\\" role=\\\"form\\\">\\r\\n\\r\\n                    <h5 style=\\\"color:black;font-weight: bold; padding-top:20px\\\">Register</h5>\\r\\n\\r\\n                    <div class=\\\"form-content\\\" style=\\\"padding: 40px 0 0 0;margin-top: -40px\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <span class=\\\"row row1\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"firstName\\\" name=\\\"fname\\\" #fname=\\\"ngModel\\\" class=\\\"input-underline\\\" style=\\\"padding-left:2%;height: 36px;\\\"\\r\\n                                     placeholder=\\\"First Name\\\" required max='50'>\\r\\n                                <div class=\\\"input-icon-right\\\" style=\\\"height: 36px;padding:2%;\\\">\\r\\n                                    <i class=\\\"fa fa-user\\\"></i>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"fname.invalid && (fname.dirty || fname.touched)\\\"  style=\\\"color:red; text-align:left\\\">\\r\\n                                    <div *ngIf=\\\"fname.errors.required\\\">\\r\\n                                        <small>First Name Is Required</small>\\r\\n                                    </div>\\r\\n                                    </div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <span class=\\\"row row1\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"lastName\\\" name=\\\"lname\\\" maxlength=\\\"50\\\" #lname=\\\"ngModel\\\" class=\\\"input-underline\\\" style=\\\"padding-left:2%;height: 36px;\\\"\\r\\n                                     placeholder=\\\"Last Name\\\" >\\r\\n                                <div class=\\\"input-icon-right\\\" style=\\\"height: 36px;padding:2%;\\\">\\r\\n                                    <i class=\\\"fa fa-user\\\"></i>\\r\\n                                </div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <span class=\\\"row row1\\\">\\r\\n                                <input type=\\\"text\\\" autocomplete=\\\"off\\\" required [(ngModel)]=\\\"uname\\\" #email=\\\"ngModel\\\" class=\\\"input-underline\\\" style=\\\"padding-left:2%;height: 36px;\\\"\\r\\n                                    id=\\\"uname\\\" name=\\\"uname\\\"\\r\\n                                    placeholder=\\\"Email\\\" max='250'>\\r\\n                                <div class=\\\"input-icon-right\\\" style=\\\"height: 36px;padding:2%;\\\">\\r\\n                                    <i class=\\\"fa fa-envelope\\\"></i>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\" style=\\\"color:red; text-align:left\\\">\\r\\n\\r\\n                                    <div *ngIf=\\\"email.errors.required\\\">\\r\\n                                        <small> Email Is Required</small>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"email.errors.pattern\\\">\\r\\n                                        <small> Enter Valid Email</small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <span class=\\\"row row1\\\">\\r\\n                                    <input type=\\\"text\\\" autocomplete=\\\"off\\\" [(ngModel)]=\\\"Company\\\" class=\\\"input-underline\\\" style=\\\"padding-left:2%;height: 36px;\\\"\\r\\n                                    id=\\\"Company\\\" name=\\\"Company\\\" placeholder= \\\"Company\\\" max='50'>\\r\\n                                <div class=\\\"input-icon-right\\\" style=\\\"height: 36px;padding:2%;\\\">\\r\\n                                    <i class=\\\"fa fa-building-o\\\"></i>\\r\\n                                </div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- <div class=\\\"form-group\\\">\\r\\n                            <span class=\\\"row row1\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"address1\\\" autocomplete=\\\"off\\\" required name=\\\"add1\\\" #add1=\\\"ngModel\\\" maxlength=\\\"200\\\" class=\\\"input-underline\\\" style=\\\"padding-left:2%;height: 36px;\\\"\\r\\n                                     placeholder=\\\"{{ 'Address 1*' | translate }}\\\">\\r\\n                                <div class=\\\"input-icon-right\\\" style=\\\"height: 36px;padding:2%;\\\">\\r\\n                                    <i class=\\\"fa fa-address-book-o\\\"></i>\\r\\n                                </div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <span class=\\\"row row1\\\">\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"address2\\\" maxlength=\\\"200\\\" name=\\\"add2\\\" class=\\\"input-underline\\\" style=\\\"padding-left:2%;height: 36px;\\\"\\r\\n                                    placeholder=\\\"{{ 'Address 2' | translate }}\\\">\\r\\n                                <div class=\\\"input-icon-right\\\" style=\\\"height: 36px;padding:2%;\\\">\\r\\n                                    <i class=\\\"fa fa-address-book-o\\\"></i>\\r\\n                                </div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <span class=\\\"row row1\\\">\\r\\n                                <input type=\\\"text\\\"  autocomplete=\\\"off\\\" required [(ngModel)]=\\\"country\\\" maxlength=\\\"100\\\" name=\\\"country\\\" pattern=\\\"[a-zA-Z ]*\\\" maxlength=\\\"100\\\" #count=\\\"ngModel\\\" class=\\\"input-underline\\\" style=\\\"padding-left:2%;height: 36px;\\\"\\r\\n                                     placeholder=\\\"{{ 'Country*' | translate }}\\\">\\r\\n                                <div class=\\\"input-icon-right\\\" style=\\\"height: 36px;padding:2%;\\\">\\r\\n                                    <i class=\\\"fa fa-globe\\\"></i>\\r\\n                                </div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <span class=\\\"row row1\\\">\\r\\n                                <input type=\\\"text\\\" autocomplete=\\\"off\\\" required [(ngModel)]=\\\"pinCode\\\" maxlength=\\\"10\\\" #pin=\\\"ngModel\\\" class=\\\"input-underline\\\" style=\\\"padding-left:2%;height: 36px;\\\"\\r\\n                                    id=\\\"pin\\\" name=\\\"pin\\\" pattern=\\\"^[0-9]{6}$\\\" placeholder=\\\"{{ 'Postal Code*' | translate }}\\\">\\r\\n                                <div class=\\\"input-icon-right\\\" style=\\\"height: 36px;padding:2%;\\\">\\r\\n                                    <i class=\\\"fa fa-map-marker\\\"></i>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"pin.invalid && (pin.dirty || pin.touched)\\\" class=\\\"text-danger\\\">\\r\\n                                    <div *ngIf=\\\"pin.errors.pattern\\\">\\r\\n                                        <small>{{ 'Enter valid PIN Code.' | translate }}</small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </span>\\r\\n                        </div> -->\\r\\n\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <span class=\\\"row row1\\\">\\r\\n                                <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"pass\\\" #pass=\\\"ngModel\\\" required class=\\\"input-underline\\\" style=\\\"padding-left:2%;height: 36px;\\\"\\r\\n                                    placeholder=\\\"Password\\\">\\r\\n                                <div class=\\\"input-icon-right\\\" style=\\\"height: 36px;padding:2%;\\\">\\r\\n                                    <i class=\\\"fa fa-lock\\\"></i>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"pass.invalid && (pass.dirty || pass.touched)\\\" style=\\\"color:red; text-align:left\\\">\\r\\n                                    <div *ngIf=\\\"pass.errors.required\\\">\\r\\n                                        <small>Password Is Required</small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <span class=\\\"row row1\\\">\\r\\n                                <input type=\\\"password\\\" [(ngModel)]=\\\"confirmPass\\\" name=\\\"cnfPass\\\" #cnfPass=\\\"ngModel\\\" required class=\\\"input-underline\\\" style=\\\"padding-left:2%;height: 36px;\\\"\\r\\n                                    placeholder=\\\"Repeat Password\\\">\\r\\n                                <div class=\\\"input-icon-right\\\" style=\\\"height: 36px;padding:2%;\\\">\\r\\n                                    <i class=\\\"fa fa-lock\\\"></i>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"cnfPass.invalid && (cnfPass.dirty || cnfPass.touched)\\\" style=\\\"color:red; text-align:left\\\">\\r\\n                                    <div *ngIf=\\\"cnfPass.errors.required\\\">\\r\\n                                        <small> Confirm Password Is Required</small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"confirmPass != password && (cnfPass.dirty || cnfPass.touched)\\\" style=\\\"color:red; text-align:left\\\">\\r\\n                                    <small>Confirm Password Not Matched</small>\\r\\n                                </div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"message\\\" class=\\\"form-group\\\" style=\\\"color: black\\\">\\r\\n                            <span>{{message}}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <button (click)=\\\"register()\\\" class=\\\"loginButton color\\\" [disabled]=\\\"registerForm.invalid || confirmPass != password\\\">\\r\\n                        Register</button>\\r\\n                    <!-- <a class=\\\"btn rounded-btn\\\" [routerLink]=\\\"['/login']\\\"> Log in </a> -->\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \":host {\\n  display: block; }\\n\\n.login-page {\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  overflow: auto;\\n  text-align: center;\\n  color: #fff;\\n  padding: 3em; }\\n\\n.login-page .col-lg-4 {\\n    padding: 0; }\\n\\n.login-page .input-lg {\\n    height: 46px;\\n    padding: 10px 16px;\\n    font-size: 18px;\\n    line-height: 1.3333333;\\n    border-radius: 0; }\\n\\n.login-page .input-underline {\\n    width: 90%;\\n    box-shadow: none;\\n    border: 1px solid #ccc;\\n    border-right: none;\\n    color: #aaa;\\n    border-radius: 0;\\n    font-size: small; }\\n\\n.login-page .row1:hover .input-underline {\\n    border: 1px solid #aaa;\\n    border-right: none; }\\n\\n.login-page .row1:hover .input-icon-right {\\n    border: 1px solid #aaa;\\n    border-left: none; }\\n\\n.login-page .loginButton {\\n    background: #0275d8;\\n    border: 1px solid #0275d8;\\n    padding: 10px;\\n    width: 100%;\\n    text-align: center;\\n    color: #fff;\\n    border: none; }\\n\\n.login-page .input-icon-right {\\n    float: right;\\n    border: 1px solid #ccc;\\n    border-left: none;\\n    background: #fff;\\n    color: #aaa;\\n    width: 10%;\\n    padding: 8px; }\\n\\n.login-page .input-underline:focus {\\n    width: 90%;\\n    box-shadow: none;\\n    border: 1px solid #ccc;\\n    border-right: none;\\n    outline: none; }\\n\\n.login-page .btn-default {\\n    background: #f7f7f7;\\n    color: black;\\n    padding: 2px; }\\n\\n.login-page .rounded-btn {\\n    border-radius: 50px;\\n    color: rgba(255, 255, 255, 0.8);\\n    background: #222;\\n    border: 2px solid rgba(255, 255, 255, 0.8);\\n    font-size: 18px;\\n    line-height: 40px;\\n    padding: 0 25px; }\\n\\n.login-page .rounded-btn:hover, .login-page .rounded-btn:focus, .login-page .rounded-btn:active, .login-page .rounded-btn:visited {\\n    color: white;\\n    border: 2px solid white;\\n    outline: none; }\\n\\n.login-page h1 {\\n    font-weight: 300;\\n    margin-top: 20px;\\n    margin-bottom: 10px;\\n    font-size: 36px; }\\n\\n.login-page h1 small {\\n      color: rgba(255, 255, 255, 0.7); }\\n\\n.login-page .form-group {\\n    padding: 8px 0; }\\n\\n.login-page .form-group input::-webkit-input-placeholder {\\n      color: #aaa !important;\\n      font-size: small; }\\n\\n.login-page .form-group input:-moz-placeholder {\\n      /* Firefox 18- */\\n      color: #aaa !important;\\n      font-size: small; }\\n\\n.login-page .form-group input::-moz-placeholder {\\n      /* Firefox 19+ */\\n      color: #aaa !important;\\n      font-size: small; }\\n\\n.login-page .form-group input:-ms-input-placeholder {\\n      color: #aaa !important;\\n      font-size: small; }\\n\\n.login-page .form-content {\\n    padding: 40px 0; }\\n\\n.login-page .user-avatar {\\n    border-radius: 50%;\\n    border: 2px solid #FFF; }\\n\\n.loginBox {\\n  width: 350px;\\n  border: 7px solid rgba(255, 255, 255, 0.3);\\n  margin: auto; }\\n\\n.row1 {\\n  width: 85%;\\n  margin: auto; }\\n\\n.color {\\n  background-color: #398cb5 !important; }\\n\\n.color:disabled {\\n  background-color: #bababa !important; }\\n\\n.SignupBox {\\n  background-color: #398cb5 !important;\\n  margin-top: 30px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n// import { routerTransition } from '../../router.animations';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { RegisterService } from '../../services/registerService/register.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Title } from '@angular/platform-browser';\r\n// import { LanguageManagementService } from '../../shared/services/languageManagementService/languageManagement.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss'],\r\n  animations: []\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  uname: String;\r\n  password: any;\r\n  firstName: String;\r\n  lastName: String;\r\n  message: any;\r\n  Company: any;\r\n  labels:any;\r\n  code:any;\r\n  confirmPass: any;\r\n  // address1: String;\r\n  // address2: String;\r\n  // country: String;\r\n  // pinCode: String;\r\n  userData: any;\r\n  superAdmin = environment.SuperAdmin;\r\n\r\n  constructor(private RegisterService: RegisterService, private LocalStorageService: LocalStorageService, public router: Router, private titleService: Title ) {\r\n    this.labels = this.LocalStorageService.retrieve(\"SelectedLanguage\");\r\n    if (!this.labels) {\r\n      this.code = this.LocalStorageService.retrieve(\"CurrentLanguage\");\r\n      if (this.code) {\r\n        this.code = 'en';\r\n      }\r\n      // this.LanguageManagementService.translate(this.code)\r\n      //   .subscribe(\r\n      //     data => {\r\n      //       this.labels = data;\r\n      //       //this.sessionService.setSession('selectedLanguage', this.labels);\r\n      //     },\r\n      //     err => console.log('get error: ', err)\r\n      //   );\r\n    }\r\n   }\r\n\r\n  ngOnInit() {    \r\n    this.titleService.setTitle('Sign Up');\r\n    this.userData = this.LocalStorageService.retrieve('userData');\r\n    // if (this.userData) {\r\n    //   if (this.userData.User[0].Role != this.superAdmin) {\r\n    //     this.router.navigate(['/apiLookUp']);\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  register() {\r\n    var params = {\r\n      FirstName: this.firstName,\r\n      LastName: this.lastName,\r\n      Email: this.uname,\r\n      Password: btoa(this.password),\r\n      Company: this.Company,\r\n      // Address1: this.address1,\r\n      // Address2: this.address2,\r\n      // Country: this.country,\r\n      // PinCode: this.pinCode\r\n    };\r\n\r\n    this.RegisterService.registerUser(params).then(\r\n      success => {\r\n        if (success.status === 200) {\r\n          this.message = \"User Created Successfully\";\r\n        } else {\r\n          this.message = success.message;\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error)\r\n      });\r\n  };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpModule } from '@angular/http';\r\n\r\n\r\n// import { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { SignupRoutingModule } from './signup-routing.module';\r\nimport { SignupComponent } from './signup.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    SignupRoutingModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [SignupComponent]\r\n})\r\nexport class SignupModule { }\r\n"],"sourceRoot":""}